/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockExpansionNoFee } from "../MockExpansionNoFee";

export class MockExpansionNoFee__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockExpansionNoFee> {
    return super.deploy(overrides || {}) as Promise<MockExpansionNoFee>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockExpansionNoFee {
    return super.attach(address) as MockExpansionNoFee;
  }
  connect(signer: Signer): MockExpansionNoFee__factory {
    return super.connect(signer) as MockExpansionNoFee__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockExpansionNoFee {
    return new Contract(address, _abi, signerOrProvider) as MockExpansionNoFee;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lootId",
        type: "uint256",
      },
    ],
    name: "lootExpansionTokenUri",
    outputs: [
      {
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102e4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633f5c50c414610030575b600080fd5b61004d6004803603602081101561004657600080fd5b50356100c2565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561008757818101518382015260200161006f565b50505050905090810190601f1680156100b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60606100cd82610181565b60405160200180807f68747470733a2f2f626173655552492e6e65742f00000000000000000000000081525060140182805190602001908083835b6020831061014557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610108565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405290505b919050565b6060816101c2575060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015261017c565b8160005b81156101da57600101600a820491506101c6565b60008167ffffffffffffffff811180156101f357600080fd5b506040519080825280601f01601f19166020018201604052801561021e576020820181803683370190505b5085935090507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82015b83156102a557600a840660300160f81b8282806001900393508151811061026b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a84049350610248565b5094935050505056fea26469706673582212203d9b8b351ebe40fc2d9d02651e14ee5df6866c6bdf6e3ddc92b39fadff4a6d6e64736f6c63430007060033";
